[project]
name = "unclogger"
version = "0.2.0"
description = "Custom wrapper for enhanced structured logging."
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Berislav Lopac", email = "berislav@lopac.net"},
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "structlog>=24.1",
]

[project.optional-dependencies]
docs = [
    "mkdocs>=1.3.0",
    "mkapi>=1.0.14",
    "mkdocs-material>=9.5.4",
    "pymdown-extensions>=10.7",
    "jinja2>=3.1.3",
]

[project.urls]
Homepage = "https://unclogger.readthedocs.io"
Documentation = "https://unclogger.readthedocs.io"
Repository = "https://github.com/berislavlopac/unclogger"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
tests = [
    "pytest>=7.1.2",
    "pytest-cov>=3.0.0",
    "pytest-spec>=3.2.0",
    "mypy>=1.8.0",
]
checks = [
    "ruff>=0.1",
    "pydocstyle>=6.1.1",
    "deptry>=0.20.0",
]
dev = [
    "toml>=0.10.2",
]

[tool.uv]
default-groups = "all"

[tool.pytest.ini_options]
minversion = "6.0"

[tool.coverage.run]
source = [ "unclogger/", ]
omit = [ "*/tests/*", "src/tests/*", ]

[tool.coverage.report]
skip_covered = false
show_missing = true
fail_under = 90
exclude_lines = [ "pragma: no cover", "@abstract",]

[tool.ruff]
extend-exclude = [
    "migrations/*",
]
line-length = 96
output-format = "grouped"

[tool.ruff.lint]
# see https://docs.astral.sh/ruff/settings/#lint
select = [  # see https://docs.astral.sh/ruff/rules/
    "E4", "E7", "E9",  # basic pycodestyle rules
    "F",        # Pyflakes rules
    "W",        # pycodestyle warnings
    "C90",      # McCabe complexity
    "N",        # PEP8 naming conventions
    "I",        # import statements linting and formatting
    "PLR",      # Pylint refactoring recommendations
    "PTH",      # recommends to use pathlib instead of os.path
    "UP",       # pyupgrade suggestions
    "BLE",      # locates blind exception capture
    "B",        # locates possible bugs and design problems
    "A",        # locates shadowing of builtin names
    "C4",       # locates possible issues with comprehensions
    "DTZ",      # locates incorrect use of timezone information
    "PIE",      # miscellaneous linting rules
    "TRY",      # locates potential exception handling antipatterns
    "PERF",     # locates potential performance issues
    "RUF",      # various Ruff-specific linting rules
    "S",        # various insecure code, with bandit
    "ERA",      # eradicate: commented-out code
]
external = [
    "F841",     # vulture uses this code for ignoring unused names
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",     # allow unused imports
    "F403",     # allow `import *`
]
"tests/*" = [
    "PLR0913",  # unlimited function arguments
    "S101",     # allow asserts
    "S105",     # allow harcoded passwords
    "N802",     # allow variable case in test names
    "PLR2004",  # allow magic values in comparisons
]

[tool.ruff.format]
# see https://docs.astral.sh/ruff/settings/#format

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

[tool.mypy]
mypy_path = "unclogger/"
ignore_missing_imports = true

[tool.pydocstyle]
add-ignore = "D105, D107, D212, D401"
convention = "google"
match-dir = "(?!tests).*"
